datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt      DateTime @default(now())
  draws          String?
  firstName      String?
  id             String   @id @default(cuid())
  lastName       String?
  losses         Int?
  matches1       Match[]  @relation(name: "matches1")
  matches2       Match[]  @relation(name: "matches2")
  password       String
  roles          String[]
  signups        Signup[]
  tournamentwins String?
  updatedAt      DateTime @updatedAt
  username       String   @unique
  wins           Int?
}

model Tournament {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  matches   Match[]
  signups   Signup[]
  startsat  DateTime?
  updatedAt DateTime  @updatedAt
}

model Match {
  createdAt     DateTime    @default(now())
  id            String      @id @default(cuid())
  player1       User?       @relation(name: "matches1", fields: [player1Id], references: [id])
  player1Id     String?
  player2       User?       @relation(name: "matches2", fields: [player2Id], references: [id])
  player2Id     String?
  score1        Int?
  score2        String?
  scoreReported String?
  tournament    Tournament? @relation(fields: [tournamentId], references: [id])
  tournamentId  String?
  updatedAt     DateTime    @updatedAt
}

model Signup {
  checkedin    Boolean?
  createdAt    DateTime    @default(now())
  id           String      @id @default(cuid())
  tournament   Tournament? @relation(fields: [tournamentId], references: [id])
  tournamentId String?
  updatedAt    DateTime    @updatedAt
  user         User?       @relation(fields: [userId], references: [id])
  userId       String?
}

model Webpage {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
}